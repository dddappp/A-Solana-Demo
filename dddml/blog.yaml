aggregates:

  Tag:
    metadata:
      Preprocessors: [ "MOVE_CRUD_IT" ]
#      CRUD_IT_CREATE_METHOD_NAME: "CreateTag"
#      CRUD_IT_UPDATE_METHOD_NAME: "UpdateTag"
      CRUD_IT_NO_DELETE: true
    id:
      name: Name
      type: String
      generator:
        class: assigned
        #tableName: TagNameTable
    properties:
      Description:
        type: String
        length: 100
#    methods:
#      CreateTag:
#        event:
#          isObjectFrozen: false

  Article:
    metadata:
      # The following two lines indicate that the tool should automatically generate the Create and Update methods,
      # but not the Delete method.
      Preprocessors: [ "MOVE_CRUD_IT" ]
#      CRUD_IT_CREATE_METHOD_NAME: "CreateArticle"
#      CRUD_IT_UPDATE_METHOD_NAME: "UpdateArticle"
      CRUD_IT_NO_DELETE: true
    id:
      name: ArticleId
      type: u128
    properties:
      Title:
        type: String
        length: 200
      Body:
        type: String
        length: 2000
      Owner:
        type: address
      Comments:
        itemType: Comment
#      Tags:
#        itemType: String
#        defaultLogic:
#          Move:
#            "std::vector::empty()"

    entities:
      Comment:
        metadata:
          Preprocessors: [ "MOVE_CRUD_IT" ]
          CRUD_IT_NO_REMOVE_ENTITY: true
        id:
          name: CommentSeqId
          type: u64
#          generator:
#            class: sequence
#            structName: CommentSeqIdGenerator
        properties:
          Commenter:
            type: String
            length: 100
          Body:
            type: String
            length: 500
          Owner:
            type: address
    # -----------------------------------------------------
    # Methods of the Article aggregate.
    methods:
      UpdateArticleBody:
        parameters:
          Body:
            type: String
        event:
          name: ArticleBodyUpdated
#      AddComment:
#        parameters:
#          CommentSeqId:
#            type: u64
#          Commenter:
#            type: String
#            length: 100
#          Body:
#            type: String
#            length: 500
#          Owner:
#            type: address
#        references:
#          Comment:
#            type: Comment
#            parameters: ["_", "CommentSeqId"]
#            operation: "Initialize"
#        event:
#          name: CommentAdded
##          properties:
##            Owner:
##              type: address
#
#      UpdateComment:
#        parameters:
#          Comment:
#            referenceType: Comment
#            isMutableReference: true
#            #eventPropertyName: Comment
#          Commenter:
#            type: String
#            length: 100
#          Body:
#            type: String
#            length: 500
#          Owner:
#            type: address
#        event:
#          name: CommentUpdated
##        verificationLogic:
##          Move:
##            "assert!(sui::tx_context::sender(ctx) == comment::owner(comment), 111);"
##      RemoveComment:
##        verificationLogic:
##          Move:
##            "assert!(sui::tx_context::sender(ctx) == comment::owner(comment), 111);"


#      Create:
#        metadata:
#          CRUD_IT_EXPAND_PARAMETERS: true
#        parameters:
#          Blog:
#            referenceType: Blog
#            isMutableReference: true
#            eventPropertyName: BlogId
#      Update:
#        verificationLogic:
#          Move:
#            "assert!(sui::tx_context::sender(ctx) == article::owner(article), 111);"
#      Delete:
#        metadata:
#          CRUD_IT_EXPAND_PARAMETERS: true
#        parameters:
#          Blog:
#            referenceType: Blog
#            isMutableReference: true
#            eventPropertyName: BlogId
#
#
#      UpdateTags:
#        event:
#          name: ArticleTagsUpdated
#        parameters:
#          Tags:
#            itemReferenceType: Tag
#            size:
#              min: 1
#              max: 3
##
##      UpdateTagsV2:
##        event:
##          name: ArticleTagsV2Updated
##        parameters:
##          Tags:
##            itemReferenceType: TagV2
##            size:
##              min: 1
##              max: 3

#  TagV2:
#    metadata:
#      Preprocessors: [ "MOVE_CRUD_IT" ]
#    immutable: true
#    id:
#      name: Id
#      type: UID
#    properties:
#      Name:
#        type: String
#        length: 100
#    methods:
#      Create:
#        event:
#          isObjectFrozen: true
#

#
#singletonObjects:
#
  Blog:
    #friends: [ "Article.Create", "Article.Delete" ]
    metadata:
      Preprocessors: [ "MOVE_CRUD_IT" ]
#      CRUD_IT_CREATE_METHOD_NAME: "CreateBlog"
#      CRUD_IT_UPDATE_METHOD_NAME: "UpdateBlog"
      CRUD_IT_NO_DELETE: true
    id:
      name: Owner
      type: address
      generator:
        class: signer
    properties:
      Name:
        type: String
        length: 200
#        defaultLogic:
#          Move:
#            'std::string::utf8(b"Unnamed Blog")'
#      Articles:
#        itemType: ID #ObjectID
#        isList: true
#      Vault:
#        type: "Balance<SUI>"
#
#    methods:
#      "__Init__":
#        event:
#          isObjectShared: true # Share the object after initialization.
#
#      Donate:
#        shouldCallByReference: true
#        parameters:
#          Amount:
#            type: Balance<SUI>
#        event:
#          name: DonationReceived
#          properties:
#            Amount:
#              type: u64
#      Withdraw:
#        shouldCallByReference: true
#        parameters:
#          Amount:
#            type: u64
#        result:
#          type: Balance<SUI>
#        event:
#          name: VaultWithdrawn
#
#      AddArticle:
#        isInternal: true
#        #metadata:
#        #  NoSigner: true
#        shouldCallByReference: true
#        event:
#          name: ArticleAddedToBlog
#        parameters:
#          ArticleId:
#            type: ID #ObjectID
#
#      RemoveArticle:
#        isInternal: true
#        #metadata:
#        #  NoSigner: true
#        shouldCallByReference: true
#        event:
#          name: ArticleRemovedFromBlog
#        parameters:
#          ArticleId:
#            type: ID #ObjectID
